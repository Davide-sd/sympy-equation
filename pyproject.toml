[project]
name = "sympy_equation"
version = "1.1.2"
description = "Equations that can be algebraicly manipulated."
authors = [
    {name = "Davide SandonÃ ", email = "sandona.davide@gmail.com"},
    {name = "Jonathan Gutow", email = "gutow@uwosh.edu"},
]
dependencies = [
    "param",
    "sympy",
]
requires-python = ">=3.9"
readme = "README.md"
license = {text = "GPL-3.0+"}
keywords = [
    "symbolic algebra",
    "computer algebra",
    "CAS",
    "sympy",
    "equation",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
]

[project.urls]
Homepage = "https://gutow.github.io/Algebra_with_Sympy/"

[project.optional-dependencies]
interactive = [
    "ipython>=8.18.1",
    "jupyterlab>=4.4.2",
]
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.ruff]
line-length = 79
exclude = [
    "doc",
    "assets"
]

[tool.ruff.lint]
ignore = [
    "E731", # Do not assign a lambda expression, use a def
    "E741", # Ambiguous variable name
    "N801", # Class name `Class_Name` should use CapWords convention
    "N802", # Function name `fun_name` should be lowercasee
    "N803", # Argument name `arg_name` should be lowercase
    "N806", # Variable `var_name` in function should be lowercase
    "TRY003", # Avoid specifying long messages outside the exception class
    "EM101", # Exception must not use a string literal, assign to variable first
    "EM101", # Exception must not use an f-string literal, assign to variable first
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
    "C408", # Unnecessary `dict` call (rewrite as a literal)
    "PT006", # Wrong type passed to first argument of `@pytest.mark.parametrize`; expected `tuple`
    "UP031", # Use format specifiers instead of percent format
]

[dependency-groups]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.9",
    "IPython>=8.18.1",
]
doc = [
    "matplotlib>=3.9.4",
    "numpy>=2.0.2",
    "sphinx>=7.4.7",
    "numpydoc>=1.8.0",
    "sphinx-design>=0.6.1",
    "sphinx-rtd-theme>=3.0.2",
    "nbsphinx>=0.9.7",
    "IPython>=8.18.1",
]
